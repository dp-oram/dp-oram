# stages:
#   - build
#   - test
#   - release
#   - deploy

# build-binaries:
#   image: dbogatov/docker-images:pbc-latest
#   stage: build
#   script:
#     - cd ./dp-oram
#     - make binaries
#   artifacts:
#     expire_in: 30 min
#     paths:
#       - ./dp-oram/bin
#   tags:
#     - docker

# build-docs:
#   image: dbogatov/docker-images:doxygen-latest
#   stage: build
#   script:
#     - cd ./dp-oram
#     - doxygen ../Doxyfile
#   artifacts:
#     expire_in: 30 min
#     paths:
#       - ./docs
#       - Dockerfile
#       - nginx.conf
#   tags:
#     - docker

# unit-test:
#   image: dbogatov/docker-images:pbc-latest
#   stage: test
#   script:
#     - cd ./dp-oram/
#     - make coverage
#   dependencies: []
#   coverage: /^TOTAL.*\s+(\d+\%)$/
#   artifacts:
#     expire_in: 1 day
#     paths:
#       - ./dp-oram/coverage-html/
#     reports:
#       junit: ./dp-oram/junit-*.xml
#       cobertura: ./dp-oram/cobertura.xml
#   tags:
#     - docker

# integration-test:
#   image: dbogatov/docker-images:pbc-latest
#   stage: test
#   script:
#     - cd ./dp-oram/
#     - make run-integration
#   dependencies: []
#   tags:
#     - docker

# benchmarks:
#   image: dbogatov/docker-images:pbc-latest
#   stage: test
#   script:
#     - cd ./dp-oram/
#     - make run-benchmarks
#   dependencies: []
#   tags:
#     - docker

# shared-library:
#   image: dbogatov/docker-images:pbc-latest
#   stage: test
#   script:
#     - cd ./dp-oram/
#     - make shared ldconfig run-shared-lib
#   dependencies: []
#   tags:
#     - docker

# docs-website:
#   variables:
#     GIT_STRATEGY: none
#   stage: release
#   script:
#     - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_BUILD_REF_NAME .
#     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
#     - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_BUILD_REF_NAME
#   dependencies:
#     - build-docs
#   tags:
#     - shell
#   only:
#     - master

# pages:
#   image: dbogatov/docker-images:alpine-extras-latest
#   variables:
#     GIT_STRATEGY: none
#   stage: release
#   script:
#     - mv docs/html public/
#     - echo "Uploading files to pages"
#   artifacts:
#     expire_in: 30 min
#     paths:
#       - public
#   dependencies:
#     - build-docs
#   tags:
#     - docker
#   only:
#     - master

# variables:
#   CI_REF: &ref 85f8a6f6305719f3c234b5368fa8f7e5ce5d099c

# include:
#   # DEPLOY
#   - project: "templates/ci-snippets"
#     file: "trigger-websites-deploy.yml"
#     ref: *ref
